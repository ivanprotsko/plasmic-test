// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cQ6n6YybaMq43XmcPKMuLG
// Component: mkxFo3p1jZI
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: cQ6n6YybaMq43XmcPKMuLG/projectcss
import sty from "./PlasmicFeatureListSection.module.css"; // plasmic-import: mkxFo3p1jZI/css

export type PlasmicFeatureListSection__VariantMembers = {};

export type PlasmicFeatureListSection__VariantsArgs = {};
type VariantPropType = keyof PlasmicFeatureListSection__VariantsArgs;
export const PlasmicFeatureListSection__VariantProps =
  new Array<VariantPropType>();

export type PlasmicFeatureListSection__ArgsType = {};
type ArgPropType = keyof PlasmicFeatureListSection__ArgsType;
export const PlasmicFeatureListSection__ArgProps = new Array<ArgPropType>();

export type PlasmicFeatureListSection__OverridesType = {
  root?: p.Flex<"div">;
  frame99?: p.Flex<"div">;
  title2?: p.Flex<"div">;
  featureListSection6?: p.Flex<"div">;
  frame97?: p.Flex<"div">;
  blockFeatureListSection5?: p.Flex<"div">;
  icon?: p.Flex<"div">;
  block2?: p.Flex<"div">;
  titleLine?: p.Flex<"div">;
  line?: p.Flex<"div">;
  blockFeatureListSection52?: p.Flex<"div">;
  block3?: p.Flex<"div">;
  titleLine2?: p.Flex<"div">;
  line2?: p.Flex<"div">;
  concepts?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms?: p.Flex<"div">;
  blockFeatureListSection53?: p.Flex<"div">;
  block4?: p.Flex<"div">;
  titleLine3?: p.Flex<"div">;
  line3?: p.Flex<"div">;
  concepts2?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2?: p.Flex<"div">;
  frame98?: p.Flex<"div">;
  blockFeatureListSection54?: p.Flex<"div">;
  block5?: p.Flex<"div">;
  titleLine4?: p.Flex<"div">;
  line4?: p.Flex<"div">;
  concepts3?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3?: p.Flex<"div">;
  blockFeatureListSection55?: p.Flex<"div">;
  block6?: p.Flex<"div">;
  titleLine5?: p.Flex<"div">;
  line5?: p.Flex<"div">;
  concepts4?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4?: p.Flex<"div">;
};

export interface DefaultFeatureListSectionProps {
  className?: string;
}

export const defaultFeatureListSection__Args: Partial<PlasmicFeatureListSection__ArgsType> =
  {};

function PlasmicFeatureListSection__RenderFunc(props: {
  variants: PlasmicFeatureListSection__VariantsArgs;
  args: PlasmicFeatureListSection__ArgsType;
  overrides: PlasmicFeatureListSection__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultFeatureListSection__Args, props.args);
  const $props = args;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"frame99"}
        data-plasmic-override={overrides.frame99}
        className={classNames(projectcss.all, sty.frame99)}
      >
        <div
          data-plasmic-name={"title2"}
          data-plasmic-override={overrides.title2}
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.title2
          )}
        >
          {"About  us"}
        </div>

        <p.Stack
          as={"div"}
          data-plasmic-name={"featureListSection6"}
          data-plasmic-override={overrides.featureListSection6}
          hasGap={true}
          className={classNames(projectcss.all, sty.featureListSection6)}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"frame97"}
            data-plasmic-override={overrides.frame97}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame97)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"blockFeatureListSection5"}
              data-plasmic-override={overrides.blockFeatureListSection5}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.blockFeatureListSection5
              )}
            >
              <div
                data-plasmic-name={"icon"}
                data-plasmic-override={overrides.icon}
                className={classNames(projectcss.all, sty.icon)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__t16Fj)}
                  displayHeight={"100px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"100px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/blank_project/images/group.svg",
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: 1
                  }}
                />
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"block2"}
                data-plasmic-override={overrides.block2}
                hasGap={true}
                className={classNames(projectcss.all, sty.block2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleLine"}
                  data-plasmic-override={overrides.titleLine}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleLine)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eruw8)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"line"}
                        data-plasmic-override={overrides.line}
                        className={classNames(projectcss.all, sty.line)}
                      />
                    ) : null}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gvSK
                    )}
                  >
                    {"Concepts"}
                  </div>
                </p.Stack>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1KRlt
                  )}
                >
                  {
                    "We work on a unique detailed strategy and concept of growth and recognition on the platform, applying current trends and algorithms."
                  }
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"blockFeatureListSection52"}
              data-plasmic-override={overrides.blockFeatureListSection52}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.blockFeatureListSection52
              )}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__cxkB2)}
                displayHeight={"100px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/blank_project/images/icon.svg",
                  fullWidth: 100,
                  fullHeight: 100,
                  aspectRatio: 1
                }}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"block3"}
                data-plasmic-override={overrides.block3}
                hasGap={true}
                className={classNames(projectcss.all, sty.block3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleLine2"}
                  data-plasmic-override={overrides.titleLine2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleLine2)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bnLz)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"line2"}
                        data-plasmic-override={overrides.line2}
                        className={classNames(projectcss.all, sty.line2)}
                      />
                    ) : null}
                  </div>

                  <div
                    data-plasmic-name={"concepts"}
                    data-plasmic-override={overrides.concepts}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.concepts
                    )}
                  >
                    {"Marketing"}
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={
                    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
                  }
                  data-plasmic-override={
                    overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms
                  )}
                >
                  {
                    "We analyze the set goals and elaborate the main concept of your brand, aiming at your final aspiration and conveying the main vision and values of your company."
                  }
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"blockFeatureListSection53"}
              data-plasmic-override={overrides.blockFeatureListSection53}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.blockFeatureListSection53
              )}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__wyMcR)}
                displayHeight={"100px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/blank_project/images/icon2.svg",
                  fullWidth: 100,
                  fullHeight: 100,
                  aspectRatio: 1
                }}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"block4"}
                data-plasmic-override={overrides.block4}
                hasGap={true}
                className={classNames(projectcss.all, sty.block4)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleLine3"}
                  data-plasmic-override={overrides.titleLine3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleLine3)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fqH2X)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"line3"}
                        data-plasmic-override={overrides.line3}
                        className={classNames(projectcss.all, sty.line3)}
                      />
                    ) : null}
                  </div>

                  <div
                    data-plasmic-name={"concepts2"}
                    data-plasmic-override={overrides.concepts2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.concepts2
                    )}
                  >
                    {"Brand monitoring"}
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={
                    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
                  }
                  data-plasmic-override={
                    overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2
                  )}
                >
                  {
                    "We track channels to identify where your brand is brought up; analyze and let you understand how the audience perceives it; help you keep it under control and prevent potential crises."
                  }
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"frame98"}
            data-plasmic-override={overrides.frame98}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame98)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"blockFeatureListSection54"}
              data-plasmic-override={overrides.blockFeatureListSection54}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.blockFeatureListSection54
              )}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___9ZqBd)}
                displayHeight={"100px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/blank_project/images/icon3.svg",
                  fullWidth: 100,
                  fullHeight: 100,
                  aspectRatio: 1
                }}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"block5"}
                data-plasmic-override={overrides.block5}
                hasGap={true}
                className={classNames(projectcss.all, sty.block5)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleLine4"}
                  data-plasmic-override={overrides.titleLine4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleLine4)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5SaaU)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"line4"}
                        data-plasmic-override={overrides.line4}
                        className={classNames(projectcss.all, sty.line4)}
                      />
                    ) : null}
                  </div>

                  <div
                    data-plasmic-name={"concepts3"}
                    data-plasmic-override={overrides.concepts3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.concepts3
                    )}
                  >
                    {"Advertisment"}
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={
                    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
                  }
                  data-plasmic-override={
                    overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3
                  )}
                >
                  {
                    "We target your potential audience in accordance \nwith the functionality and \ngoals of your brand, set up advertising campaigns with \nthe effort to increase and monetize your reach, and increase the brand's sale power."
                  }
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"blockFeatureListSection55"}
              data-plasmic-override={overrides.blockFeatureListSection55}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.blockFeatureListSection55
              )}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__sqq3Z)}
                displayHeight={"100px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/blank_project/images/icon4.svg",
                  fullWidth: 100,
                  fullHeight: 100,
                  aspectRatio: 1
                }}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"block6"}
                data-plasmic-override={overrides.block6}
                hasGap={true}
                className={classNames(projectcss.all, sty.block6)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleLine5"}
                  data-plasmic-override={overrides.titleLine5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleLine5)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ftFkX)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"line5"}
                        data-plasmic-override={overrides.line5}
                        className={classNames(projectcss.all, sty.line5)}
                      />
                    ) : null}
                  </div>

                  <div
                    data-plasmic-name={"concepts4"}
                    data-plasmic-override={overrides.concepts4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.concepts4
                    )}
                  >
                    {"Motion"}
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={
                    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
                  }
                  data-plasmic-override={
                    overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4
                  )}
                >
                  {
                    "We plan, program and create engaging and potentially viral content, after analyzing your pursued goals."
                  }
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>
        </p.Stack>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "frame99",
    "title2",
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  frame99: [
    "frame99",
    "title2",
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  title2: ["title2"],
  featureListSection6: [
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  frame97: [
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
  ],
  blockFeatureListSection5: [
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line"
  ],
  icon: ["icon"],
  block2: ["block2", "titleLine", "line"],
  titleLine: ["titleLine", "line"],
  line: ["line"],
  blockFeatureListSection52: [
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
  ],
  block3: [
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
  ],
  titleLine2: ["titleLine2", "line2", "concepts"],
  line2: ["line2"],
  concepts: ["concepts"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
    ],
  blockFeatureListSection53: [
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
  ],
  block4: [
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
  ],
  titleLine3: ["titleLine3", "line3", "concepts2"],
  line3: ["line3"],
  concepts2: ["concepts2"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
    ],
  frame98: [
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  blockFeatureListSection54: [
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
  ],
  block5: [
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
  ],
  titleLine4: ["titleLine4", "line4", "concepts3"],
  line4: ["line4"],
  concepts3: ["concepts3"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
    ],
  blockFeatureListSection55: [
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  block6: [
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  titleLine5: ["titleLine5", "line5", "concepts4"],
  line5: ["line5"],
  concepts4: ["concepts4"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
    ]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  frame99: "div";
  title2: "div";
  featureListSection6: "div";
  frame97: "div";
  blockFeatureListSection5: "div";
  icon: "div";
  block2: "div";
  titleLine: "div";
  line: "div";
  blockFeatureListSection52: "div";
  block3: "div";
  titleLine2: "div";
  line2: "div";
  concepts: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms: "div";
  blockFeatureListSection53: "div";
  block4: "div";
  titleLine3: "div";
  line3: "div";
  concepts2: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2: "div";
  frame98: "div";
  blockFeatureListSection54: "div";
  block5: "div";
  titleLine4: "div";
  line4: "div";
  concepts3: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3: "div";
  blockFeatureListSection55: "div";
  block6: "div";
  titleLine5: "div";
  line5: "div";
  concepts4: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFeatureListSection__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFeatureListSection__VariantsArgs;
    args?: PlasmicFeatureListSection__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFeatureListSection__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFeatureListSection__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFeatureListSection__ArgProps,
      internalVariantPropNames: PlasmicFeatureListSection__VariantProps
    });

    return PlasmicFeatureListSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFeatureListSection";
  } else {
    func.displayName = `PlasmicFeatureListSection.${nodeName}`;
  }
  return func;
}

export const PlasmicFeatureListSection = Object.assign(
  // Top-level PlasmicFeatureListSection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    frame99: makeNodeComponent("frame99"),
    title2: makeNodeComponent("title2"),
    featureListSection6: makeNodeComponent("featureListSection6"),
    frame97: makeNodeComponent("frame97"),
    blockFeatureListSection5: makeNodeComponent("blockFeatureListSection5"),
    icon: makeNodeComponent("icon"),
    block2: makeNodeComponent("block2"),
    titleLine: makeNodeComponent("titleLine"),
    line: makeNodeComponent("line"),
    blockFeatureListSection52: makeNodeComponent("blockFeatureListSection52"),
    block3: makeNodeComponent("block3"),
    titleLine2: makeNodeComponent("titleLine2"),
    line2: makeNodeComponent("line2"),
    concepts: makeNodeComponent("concepts"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
      ),
    blockFeatureListSection53: makeNodeComponent("blockFeatureListSection53"),
    block4: makeNodeComponent("block4"),
    titleLine3: makeNodeComponent("titleLine3"),
    line3: makeNodeComponent("line3"),
    concepts2: makeNodeComponent("concepts2"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
      ),
    frame98: makeNodeComponent("frame98"),
    blockFeatureListSection54: makeNodeComponent("blockFeatureListSection54"),
    block5: makeNodeComponent("block5"),
    titleLine4: makeNodeComponent("titleLine4"),
    line4: makeNodeComponent("line4"),
    concepts3: makeNodeComponent("concepts3"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
      ),
    blockFeatureListSection55: makeNodeComponent("blockFeatureListSection55"),
    block6: makeNodeComponent("block6"),
    titleLine5: makeNodeComponent("titleLine5"),
    line5: makeNodeComponent("line5"),
    concepts4: makeNodeComponent("concepts4"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
      ),

    // Metadata about props expected for PlasmicFeatureListSection
    internalVariantProps: PlasmicFeatureListSection__VariantProps,
    internalArgProps: PlasmicFeatureListSection__ArgProps
  }
);

export default PlasmicFeatureListSection;
/* prettier-ignore-end */
