// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cQ6n6YybaMq43XmcPKMuLG
// Component: 2jCPJSUaWgtB
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: cQ6n6YybaMq43XmcPKMuLG/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 2jCPJSUaWgtB/css

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  mainPageDesktop?: p.Flex<"div">;
  headerContainerSectionDesktop?: p.Flex<"div">;
  header?: p.Flex<"div">;
  surface?: p.Flex<"div">;
  image1?: p.Flex<"div">;
  links?: p.Flex<"div">;
  rectangle8?: p.Flex<"div">;
  cover?: p.Flex<"div">;
  surface2?: p.Flex<"div">;
  block?: p.Flex<"div">;
  list?: p.Flex<"div">;
  content?: p.Flex<"div">;
  content2?: p.Flex<"div">;
  picture?: p.Flex<"div">;
  pic?: p.Flex<"div">;
  fixedAspectRatioCoverElementsOnTop?: p.Flex<"div">;
  topElements?: p.Flex<"div">;
  centerElements?: p.Flex<"div">;
  bottomElements?: p.Flex<"div">;
  aspectRatio?: p.Flex<"div">;
  aspectRatioKeeperAdditionally45RotatedAutoLayout?: p.Flex<"div">;
  aspectRatioKeeperRotatedAutoLayout?: p.Flex<"div">;
  aboutTikTokSection?: p.Flex<"div">;
  surface3?: p.Flex<"div">;
  title?: p.Flex<"div">;
  featureListSection5?: p.Flex<"div">;
  frame99?: p.Flex<"div">;
  title2?: p.Flex<"div">;
  featureListSection6?: p.Flex<"div">;
  frame97?: p.Flex<"div">;
  blockFeatureListSection5?: p.Flex<"div">;
  icon?: p.Flex<"div">;
  block2?: p.Flex<"div">;
  titleLine?: p.Flex<"div">;
  line?: p.Flex<"div">;
  blockFeatureListSection52?: p.Flex<"div">;
  block3?: p.Flex<"div">;
  titleLine2?: p.Flex<"div">;
  line2?: p.Flex<"div">;
  concepts?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms?: p.Flex<"div">;
  blockFeatureListSection53?: p.Flex<"div">;
  block4?: p.Flex<"div">;
  titleLine3?: p.Flex<"div">;
  line3?: p.Flex<"div">;
  concepts2?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2?: p.Flex<"div">;
  frame98?: p.Flex<"div">;
  blockFeatureListSection54?: p.Flex<"div">;
  block5?: p.Flex<"div">;
  titleLine4?: p.Flex<"div">;
  line4?: p.Flex<"div">;
  concepts3?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3?: p.Flex<"div">;
  blockFeatureListSection55?: p.Flex<"div">;
  block6?: p.Flex<"div">;
  titleLine5?: p.Flex<"div">;
  line5?: p.Flex<"div">;
  concepts4?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4?: p.Flex<"div">;
  featureListSection3?: p.Flex<"div">;
  frame100?: p.Flex<"div">;
  title3?: p.Flex<"div">;
  blocks?: p.Flex<"div">;
  blockFeatureListSection3?: p.Flex<"div">;
  blockDefault?: p.Flex<"div">;
  block7?: p.Flex<"div">;
  title4?: p.Flex<"div">;
  line6?: p.Flex<"div">;
  concepts5?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5?: p.Flex<"div">;
  blockFeatureListSection32?: p.Flex<"div">;
  blockDefault2?: p.Flex<"div">;
  block8?: p.Flex<"div">;
  title5?: p.Flex<"div">;
  line7?: p.Flex<"div">;
  concepts6?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6?: p.Flex<"div">;
  blockFeatureListSection33?: p.Flex<"div">;
  blockDefault3?: p.Flex<"div">;
  block9?: p.Flex<"div">;
  title6?: p.Flex<"div">;
  line8?: p.Flex<"div">;
  concepts7?: p.Flex<"div">;
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7?: p.Flex<"div">;
  contactsSection?: p.Flex<"div">;
  surface4?: p.Flex<"div">;
  blockInfo?: p.Flex<"div">;
  blockInfo2?: p.Flex<"div">;
  block10?: p.Flex<"div">;
  rectangle138?: p.Flex<"div">;
  осталисьВопросы?: p.Flex<"div">;
  block11?: p.Flex<"div">;
  нашиКонтакты?: p.Flex<"div">;
  text2?: p.Flex<"div">;
  rectangle137?: p.Flex<"div">;
  form?: p.Flex<"div">;
  form2?: p.Flex<"div">;
  оставьтеЗаявку?: p.Flex<"div">;
  frame77?: p.Flex<"div">;
  block12?: p.Flex<"div">;
  input?: p.Flex<"div">;
  мыВамПерезвоним?: p.Flex<"div">;
  list2?: p.Flex<"div">;
  name?: p.Flex<"div">;
  rectangle132?: p.Flex<"div">;
  имя?: p.Flex<"div">;
  phoneNumber?: p.Flex<"div">;
  rectangle133?: p.Flex<"div">;
  номерТелефона?: p.Flex<"div">;
  phoneNumber2?: p.Flex<"div">;
  rectangle134?: p.Flex<"div">;
  button?: p.Flex<"div">;
  rectangle135?: p.Flex<"div">;
  отравитьЗаявку?: p.Flex<"div">;
  footerSection?: p.Flex<"div">;
  surface5?: p.Flex<"div">;
  copyright?: p.Flex<"div">;
  frame95?: p.Flex<"div">;
  link?: p.Flex<"div">;
};

export interface DefaultHomepageProps {}

export const defaultHomepage__Args: Partial<PlasmicHomepage__ArgsType> = {};

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepage__Args, props.args);
  const $props = args;

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"mainPageDesktop"}
            data-plasmic-override={overrides.mainPageDesktop}
            className={classNames(projectcss.all, sty.mainPageDesktop)}
          >
            <div
              data-plasmic-name={"headerContainerSectionDesktop"}
              data-plasmic-override={overrides.headerContainerSectionDesktop}
              className={classNames(
                projectcss.all,
                sty.headerContainerSectionDesktop
              )}
            >
              <div
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames(projectcss.all, sty.header)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"surface"}
                  data-plasmic-override={overrides.surface}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.surface)}
                >
                  <div
                    data-plasmic-name={"image1"}
                    data-plasmic-override={overrides.image1}
                    className={classNames(projectcss.all, sty.image1)}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"links"}
                    data-plasmic-override={overrides.links}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.links)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hu5L
                      )}
                    >
                      {"Services"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8Qwg
                      )}
                    >
                      {"Contacts"}
                    </div>
                  </p.Stack>
                </p.Stack>

                {false ? (
                  <div
                    data-plasmic-name={"rectangle8"}
                    data-plasmic-override={overrides.rectangle8}
                    className={classNames(projectcss.all, sty.rectangle8)}
                  />
                ) : null}
              </div>

              <div
                data-plasmic-name={"cover"}
                data-plasmic-override={overrides.cover}
                className={classNames(projectcss.all, sty.cover)}
              >
                <div
                  data-plasmic-name={"surface2"}
                  data-plasmic-override={overrides.surface2}
                  className={classNames(projectcss.all, sty.surface2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"block"}
                    data-plasmic-override={overrides.block}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.block)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"list"}
                      data-plasmic-override={overrides.list}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.list)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"content"}
                        data-plasmic-override={overrides.content}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.content)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"content2"}
                          data-plasmic-override={overrides.content2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.content2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qg6O
                            )}
                          >
                            {"Promoting brands \non  TikTok"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rbgW4
                            )}
                          >
                            {
                              "We solve business problems using modern tools. Automation, AR, targeting."
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>

                      {false ? (
                        <div
                          data-plasmic-name={"picture"}
                          data-plasmic-override={overrides.picture}
                          className={classNames(projectcss.all, sty.picture)}
                        />
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"pic"}
                data-plasmic-override={overrides.pic}
                className={classNames(projectcss.all, sty.pic)}
              >
                <div
                  data-plasmic-name={"fixedAspectRatioCoverElementsOnTop"}
                  data-plasmic-override={
                    overrides.fixedAspectRatioCoverElementsOnTop
                  }
                  className={classNames(
                    projectcss.all,
                    sty.fixedAspectRatioCoverElementsOnTop
                  )}
                >
                  {false ? (
                    <div
                      data-plasmic-name={"topElements"}
                      data-plasmic-override={overrides.topElements}
                      className={classNames(projectcss.all, sty.topElements)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dlGh6
                        )}
                      >
                        {"Swap me with your AL Component"}
                      </div>
                    </div>
                  ) : null}
                  {false ? (
                    <div
                      data-plasmic-name={"centerElements"}
                      data-plasmic-override={overrides.centerElements}
                      className={classNames(projectcss.all, sty.centerElements)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qLz9V
                        )}
                      >
                        {"Swap me with your AL Component"}
                      </div>
                    </div>
                  ) : null}
                  {false ? (
                    <div
                      data-plasmic-name={"bottomElements"}
                      data-plasmic-override={overrides.bottomElements}
                      className={classNames(projectcss.all, sty.bottomElements)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yJueG
                        )}
                      >
                        {"Swap me with your AL Component"}
                      </div>
                    </div>
                  ) : null}

                  <div
                    data-plasmic-name={"aspectRatio"}
                    data-plasmic-override={overrides.aspectRatio}
                    className={classNames(projectcss.all, sty.aspectRatio)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox___7EXt)}
                    >
                      <div
                        data-plasmic-name={
                          "aspectRatioKeeperAdditionally45RotatedAutoLayout"
                        }
                        data-plasmic-override={
                          overrides.aspectRatioKeeperAdditionally45RotatedAutoLayout
                        }
                        className={classNames(
                          projectcss.all,
                          sty.aspectRatioKeeperAdditionally45RotatedAutoLayout
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__trBya
                          )}
                        >
                          <div
                            data-plasmic-name={
                              "aspectRatioKeeperRotatedAutoLayout"
                            }
                            data-plasmic-override={
                              overrides.aspectRatioKeeperRotatedAutoLayout
                            }
                            className={classNames(
                              projectcss.all,
                              sty.aspectRatioKeeperRotatedAutoLayout
                            )}
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"aboutTikTokSection"}
              data-plasmic-override={overrides.aboutTikTokSection}
              className={classNames(projectcss.all, sty.aboutTikTokSection)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"surface3"}
                data-plasmic-override={overrides.surface3}
                hasGap={true}
                className={classNames(projectcss.all, sty.surface3)}
              >
                <div
                  data-plasmic-name={"title"}
                  data-plasmic-override={overrides.title}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title
                  )}
                >
                  {"Catch  on \nwith \nTikTok!"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r2FZm
                  )}
                >
                  {
                    "In the digital age, it's hard to stay away from a phenomenon like tiktok. Entertainment content \nis not the only resource of this platform. This is a new opportunity! This is your new opportunity to tell the world about your product and skyrocket your sales. Still thinking? Just a fact: TikTok surpassed both google and facebook in 2021 to become \nthe most visited platform and keeps growing. Take the chance \nto become viral and we will lead you through this journey!"
                  }
                </div>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"featureListSection5"}
              data-plasmic-override={overrides.featureListSection5}
              className={classNames(projectcss.all, sty.featureListSection5)}
            >
              <div
                data-plasmic-name={"frame99"}
                data-plasmic-override={overrides.frame99}
                className={classNames(projectcss.all, sty.frame99)}
              >
                <div
                  data-plasmic-name={"title2"}
                  data-plasmic-override={overrides.title2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title2
                  )}
                >
                  {"About  us"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"featureListSection6"}
                  data-plasmic-override={overrides.featureListSection6}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.featureListSection6
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame97"}
                    data-plasmic-override={overrides.frame97}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame97)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockFeatureListSection5"}
                      data-plasmic-override={overrides.blockFeatureListSection5}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.blockFeatureListSection5
                      )}
                    >
                      <div
                        data-plasmic-name={"icon"}
                        data-plasmic-override={overrides.icon}
                        className={classNames(projectcss.all, sty.icon)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___25CYh)}
                          displayHeight={"100px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/blank_project/images/group.svg",
                            fullWidth: 100,
                            fullHeight: 100,
                            aspectRatio: 1
                          }}
                        />
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block2"}
                        data-plasmic-override={overrides.block2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block2)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"titleLine"}
                          data-plasmic-override={overrides.titleLine}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.titleLine)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wEvi3
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line"}
                                data-plasmic-override={overrides.line}
                                className={classNames(projectcss.all, sty.line)}
                              />
                            ) : null}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iSlvA
                            )}
                          >
                            {"Concepts"}
                          </div>
                        </p.Stack>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ssBx
                          )}
                        >
                          {
                            "We work on a unique detailed strategy and concept of growth and recognition on the platform, applying current trends and algorithms."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockFeatureListSection52"}
                      data-plasmic-override={
                        overrides.blockFeatureListSection52
                      }
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.blockFeatureListSection52
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__xFHs)}
                        displayHeight={"100px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/blank_project/images/icon.svg",
                          fullWidth: 100,
                          fullHeight: 100,
                          aspectRatio: 1
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block3"}
                        data-plasmic-override={overrides.block3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block3)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"titleLine2"}
                          data-plasmic-override={overrides.titleLine2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.titleLine2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fw1
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line2"}
                                data-plasmic-override={overrides.line2}
                                className={classNames(
                                  projectcss.all,
                                  sty.line2
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            data-plasmic-name={"concepts"}
                            data-plasmic-override={overrides.concepts}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.concepts
                            )}
                          >
                            {"Marketing"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={
                            "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
                          }
                          data-plasmic-override={
                            overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms
                          )}
                        >
                          {
                            "We analyze the set goals and elaborate the main concept of your brand, aiming at your final aspiration and conveying the main vision and values of your company."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockFeatureListSection53"}
                      data-plasmic-override={
                        overrides.blockFeatureListSection53
                      }
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.blockFeatureListSection53
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__d3J9N)}
                        displayHeight={"100px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/blank_project/images/icon2.svg",
                          fullWidth: 100,
                          fullHeight: 100,
                          aspectRatio: 1
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block4"}
                        data-plasmic-override={overrides.block4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block4)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"titleLine3"}
                          data-plasmic-override={overrides.titleLine3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.titleLine3)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__oj4U7
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line3"}
                                data-plasmic-override={overrides.line3}
                                className={classNames(
                                  projectcss.all,
                                  sty.line3
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            data-plasmic-name={"concepts2"}
                            data-plasmic-override={overrides.concepts2}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.concepts2
                            )}
                          >
                            {"Brand monitoring"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={
                            "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
                          }
                          data-plasmic-override={
                            overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2
                          )}
                        >
                          {
                            "We track channels to identify where your brand is brought up; analyze and let you understand how the audience perceives it; help you keep it under control and prevent potential crises."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame98"}
                    data-plasmic-override={overrides.frame98}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame98)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockFeatureListSection54"}
                      data-plasmic-override={
                        overrides.blockFeatureListSection54
                      }
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.blockFeatureListSection54
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___6QpCu)}
                        displayHeight={"100px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/blank_project/images/icon3.svg",
                          fullWidth: 100,
                          fullHeight: 100,
                          aspectRatio: 1
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block5"}
                        data-plasmic-override={overrides.block5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block5)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"titleLine4"}
                          data-plasmic-override={overrides.titleLine4}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.titleLine4)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__orvBt
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line4"}
                                data-plasmic-override={overrides.line4}
                                className={classNames(
                                  projectcss.all,
                                  sty.line4
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            data-plasmic-name={"concepts3"}
                            data-plasmic-override={overrides.concepts3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.concepts3
                            )}
                          >
                            {"Advertisment"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={
                            "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
                          }
                          data-plasmic-override={
                            overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3
                          )}
                        >
                          {
                            "We target your potential audience in accordance \nwith the functionality and \ngoals of your brand, set up advertising campaigns with \nthe effort to increase and monetize your reach, and increase the brand's sale power."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockFeatureListSection55"}
                      data-plasmic-override={
                        overrides.blockFeatureListSection55
                      }
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.blockFeatureListSection55
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___44RFu)}
                        displayHeight={"100px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/blank_project/images/icon4.svg",
                          fullWidth: 100,
                          fullHeight: 100,
                          aspectRatio: 1
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block6"}
                        data-plasmic-override={overrides.block6}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block6)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"titleLine5"}
                          data-plasmic-override={overrides.titleLine5}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.titleLine5)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__u2FYm
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line5"}
                                data-plasmic-override={overrides.line5}
                                className={classNames(
                                  projectcss.all,
                                  sty.line5
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            data-plasmic-name={"concepts4"}
                            data-plasmic-override={overrides.concepts4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.concepts4
                            )}
                          >
                            {"Motion"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={
                            "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
                          }
                          data-plasmic-override={
                            overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4
                          )}
                        >
                          {
                            "We plan, program and create engaging and potentially viral content, after analyzing your pursued goals."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"featureListSection3"}
              data-plasmic-override={overrides.featureListSection3}
              className={classNames(projectcss.all, sty.featureListSection3)}
            >
              <div
                data-plasmic-name={"frame100"}
                data-plasmic-override={overrides.frame100}
                className={classNames(projectcss.all, sty.frame100)}
              >
                <div
                  data-plasmic-name={"title3"}
                  data-plasmic-override={overrides.title3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.title3
                  )}
                >
                  {"We  provide"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"blocks"}
                  data-plasmic-override={overrides.blocks}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.blocks)}
                >
                  <div
                    data-plasmic-name={"blockFeatureListSection3"}
                    data-plasmic-override={overrides.blockFeatureListSection3}
                    className={classNames(
                      projectcss.all,
                      sty.blockFeatureListSection3
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockDefault"}
                      data-plasmic-override={overrides.blockDefault}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.blockDefault)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block7"}
                        data-plasmic-override={overrides.block7}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block7)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"title4"}
                          data-plasmic-override={overrides.title4}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.title4)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dVwg5
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line6"}
                                data-plasmic-override={overrides.line6}
                                className={classNames(
                                  projectcss.all,
                                  sty.line6
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            data-plasmic-name={"concepts5"}
                            data-plasmic-override={overrides.concepts5}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.concepts5
                            )}
                          >
                            {"Individual \napproach"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={
                            "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5"
                          }
                          data-plasmic-override={
                            overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5
                          )}
                        >
                          {
                            "Each business case is always unique, therefore our team provides individual high-quality approach: never cutting corners and delivering impressive results."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"blockFeatureListSection32"}
                    data-plasmic-override={overrides.blockFeatureListSection32}
                    className={classNames(
                      projectcss.all,
                      sty.blockFeatureListSection32
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockDefault2"}
                      data-plasmic-override={overrides.blockDefault2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.blockDefault2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block8"}
                        data-plasmic-override={overrides.block8}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block8)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"title5"}
                          data-plasmic-override={overrides.title5}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.title5)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9EPNl
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line7"}
                                data-plasmic-override={overrides.line7}
                                className={classNames(
                                  projectcss.all,
                                  sty.line7
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            data-plasmic-name={"concepts6"}
                            data-plasmic-override={overrides.concepts6}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.concepts6
                            )}
                          >
                            {"Unque formula \nof success"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={
                            "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6"
                          }
                          data-plasmic-override={
                            overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6
                          )}
                        >
                          {
                            "Our added value lies in relevance - mix of creativity and audacity of our young team players combined with wisdom and vast experience \nof our old school players \ngrants a blend of fresh but still well thought-out ideas and solutions with anunderstanding of the modern market, topical values of youth and their competent application in order to fulfill our clients’ needs and even beyond."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"blockFeatureListSection33"}
                    data-plasmic-override={overrides.blockFeatureListSection33}
                    className={classNames(
                      projectcss.all,
                      sty.blockFeatureListSection33
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockDefault3"}
                      data-plasmic-override={overrides.blockDefault3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.blockDefault3)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"block9"}
                        data-plasmic-override={overrides.block9}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.block9)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"title6"}
                          data-plasmic-override={overrides.title6}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.title6)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kWa0G
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"line8"}
                                data-plasmic-override={overrides.line8}
                                className={classNames(
                                  projectcss.all,
                                  sty.line8
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            data-plasmic-name={"concepts7"}
                            data-plasmic-override={overrides.concepts7}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.concepts7
                            )}
                          >
                            {"Any time in the \ncourse of time"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={
                            "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
                          }
                          data-plasmic-override={
                            overrides.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7
                          )}
                        >
                          {
                            "Other than working it up to date with current trends, we analyse and forecast short \nand long term tendencies that will always help our clients \ngain an advantage over their competitors."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"contactsSection"}
              data-plasmic-override={overrides.contactsSection}
              className={classNames(projectcss.all, sty.contactsSection)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"surface4"}
                data-plasmic-override={overrides.surface4}
                hasGap={true}
                className={classNames(projectcss.all, sty.surface4)}
              >
                <div
                  data-plasmic-name={"blockInfo"}
                  data-plasmic-override={overrides.blockInfo}
                  className={classNames(projectcss.all, sty.blockInfo)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"blockInfo2"}
                    data-plasmic-override={overrides.blockInfo2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.blockInfo2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"block10"}
                      data-plasmic-override={overrides.block10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.block10)}
                    >
                      <div
                        data-plasmic-name={"rectangle138"}
                        data-plasmic-override={overrides.rectangle138}
                        className={classNames(projectcss.all, sty.rectangle138)}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aWjgs
                        )}
                      >
                        <div
                          data-plasmic-name={"осталисьВопросы"}
                          data-plasmic-override={overrides.осталисьВопросы}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.осталисьвопросы
                          )}
                        >
                          {"Any \nquestions?"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"block11"}
                      data-plasmic-override={overrides.block11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.block11)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vd7Wa
                        )}
                      >
                        <div
                          data-plasmic-name={"нашиКонтакты"}
                          data-plasmic-override={overrides.нашиКонтакты}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.нашиконтакты
                          )}
                        >
                          {"Our contacts"}
                        </div>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"text2"}
                        data-plasmic-override={overrides.text2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.text2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__srsna
                          )}
                        >
                          {"tif@tif.agency"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__w13Nl
                          )}
                        >
                          {"+7 (977) 455-05-06"}
                        </div>
                      </p.Stack>

                      <div
                        data-plasmic-name={"rectangle137"}
                        data-plasmic-override={overrides.rectangle137}
                        className={classNames(projectcss.all, sty.rectangle137)}
                      />
                    </p.Stack>
                  </p.Stack>
                </div>

                <div
                  data-plasmic-name={"form"}
                  data-plasmic-override={overrides.form}
                  className={classNames(projectcss.all, sty.form)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"form2"}
                    data-plasmic-override={overrides.form2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.form2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ax8Ll)}
                    >
                      <div
                        data-plasmic-name={"оставьтеЗаявку"}
                        data-plasmic-override={overrides.оставьтеЗаявку}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.оставьтезаявку
                        )}
                      >
                        {"Fill  the form"}
                      </div>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame77"}
                    data-plasmic-override={overrides.frame77}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame77)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"block12"}
                      data-plasmic-override={overrides.block12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.block12)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"input"}
                        data-plasmic-override={overrides.input}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.input)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qTxd
                          )}
                        >
                          <div
                            data-plasmic-name={"мыВамПерезвоним"}
                            data-plasmic-override={overrides.мыВамПерезвоним}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.мывамперезвоним
                            )}
                          >
                            {"We will call you back"}
                          </div>
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"list2"}
                          data-plasmic-override={overrides.list2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.list2)}
                        >
                          <div
                            data-plasmic-name={"name"}
                            data-plasmic-override={overrides.name}
                            className={classNames(projectcss.all, sty.name)}
                          >
                            <div
                              data-plasmic-name={"rectangle132"}
                              data-plasmic-override={overrides.rectangle132}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle132
                              )}
                            />

                            <div
                              data-plasmic-name={"имя"}
                              data-plasmic-override={overrides.имя}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.имя
                              )}
                            >
                              {"Name"}
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"phoneNumber"}
                            data-plasmic-override={overrides.phoneNumber}
                            className={classNames(
                              projectcss.all,
                              sty.phoneNumber
                            )}
                          >
                            <div
                              data-plasmic-name={"rectangle133"}
                              data-plasmic-override={overrides.rectangle133}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle133
                              )}
                            />

                            <div
                              data-plasmic-name={"номерТелефона"}
                              data-plasmic-override={overrides.номерТелефона}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.номертелефона
                              )}
                            >
                              {"Phone "}
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"phoneNumber2"}
                            data-plasmic-override={overrides.phoneNumber2}
                            className={classNames(
                              projectcss.all,
                              sty.phoneNumber2
                            )}
                          >
                            <div
                              data-plasmic-name={"rectangle134"}
                              data-plasmic-override={overrides.rectangle134}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle134
                              )}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__y2Tqu
                              )}
                            >
                              {"Email"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <div
                        data-plasmic-name={"button"}
                        data-plasmic-override={overrides.button}
                        className={classNames(projectcss.all, sty.button)}
                      >
                        <div
                          data-plasmic-name={"rectangle135"}
                          data-plasmic-override={overrides.rectangle135}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle135
                          )}
                        />

                        <div
                          data-plasmic-name={"отравитьЗаявку"}
                          data-plasmic-override={overrides.отравитьЗаявку}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.отравитьзаявку
                          )}
                        >
                          {"Send request"}
                        </div>
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iIxbg
                      )}
                    >
                      {
                        "BY CLICKING THE “SEND REQUEST” BUTTON, I AGREE TO THE PRIVACY POLICY"
                      }
                    </div>
                  </p.Stack>
                </div>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"footerSection"}
              data-plasmic-override={overrides.footerSection}
              className={classNames(projectcss.all, sty.footerSection)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"surface5"}
                data-plasmic-override={overrides.surface5}
                hasGap={true}
                className={classNames(projectcss.all, sty.surface5)}
              >
                <div
                  data-plasmic-name={"copyright"}
                  data-plasmic-override={overrides.copyright}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.copyright
                  )}
                >
                  {"© TLF Design agency"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame95"}
                  data-plasmic-override={overrides.frame95}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame95)}
                >
                  {false ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lch
                      )}
                    >
                      {"Link"}
                    </div>
                  ) : null}
                  {false ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4BsW
                      )}
                    >
                      {"Link"}
                    </div>
                  ) : null}

                  <div
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.link
                    )}
                  >
                    {"Privacy policy"}
                  </div>
                </p.Stack>
              </p.Stack>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "mainPageDesktop",
    "headerContainerSectionDesktop",
    "header",
    "surface",
    "image1",
    "links",
    "rectangle8",
    "cover",
    "surface2",
    "block",
    "list",
    "content",
    "content2",
    "picture",
    "pic",
    "fixedAspectRatioCoverElementsOnTop",
    "topElements",
    "centerElements",
    "bottomElements",
    "aspectRatio",
    "aspectRatioKeeperAdditionally45RotatedAutoLayout",
    "aspectRatioKeeperRotatedAutoLayout",
    "aboutTikTokSection",
    "surface3",
    "title",
    "featureListSection5",
    "frame99",
    "title2",
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4",
    "featureListSection3",
    "frame100",
    "title3",
    "blocks",
    "blockFeatureListSection3",
    "blockDefault",
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5",
    "blockFeatureListSection32",
    "blockDefault2",
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6",
    "blockFeatureListSection33",
    "blockDefault3",
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7",
    "contactsSection",
    "surface4",
    "blockInfo",
    "blockInfo2",
    "block10",
    "rectangle138",
    "осталисьВопросы",
    "block11",
    "нашиКонтакты",
    "text2",
    "rectangle137",
    "form",
    "form2",
    "оставьтеЗаявку",
    "frame77",
    "block12",
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134",
    "button",
    "rectangle135",
    "отравитьЗаявку",
    "footerSection",
    "surface5",
    "copyright",
    "frame95",
    "link"
  ],
  mainPageDesktop: [
    "mainPageDesktop",
    "headerContainerSectionDesktop",
    "header",
    "surface",
    "image1",
    "links",
    "rectangle8",
    "cover",
    "surface2",
    "block",
    "list",
    "content",
    "content2",
    "picture",
    "pic",
    "fixedAspectRatioCoverElementsOnTop",
    "topElements",
    "centerElements",
    "bottomElements",
    "aspectRatio",
    "aspectRatioKeeperAdditionally45RotatedAutoLayout",
    "aspectRatioKeeperRotatedAutoLayout",
    "aboutTikTokSection",
    "surface3",
    "title",
    "featureListSection5",
    "frame99",
    "title2",
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4",
    "featureListSection3",
    "frame100",
    "title3",
    "blocks",
    "blockFeatureListSection3",
    "blockDefault",
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5",
    "blockFeatureListSection32",
    "blockDefault2",
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6",
    "blockFeatureListSection33",
    "blockDefault3",
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7",
    "contactsSection",
    "surface4",
    "blockInfo",
    "blockInfo2",
    "block10",
    "rectangle138",
    "осталисьВопросы",
    "block11",
    "нашиКонтакты",
    "text2",
    "rectangle137",
    "form",
    "form2",
    "оставьтеЗаявку",
    "frame77",
    "block12",
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134",
    "button",
    "rectangle135",
    "отравитьЗаявку",
    "footerSection",
    "surface5",
    "copyright",
    "frame95",
    "link"
  ],
  headerContainerSectionDesktop: [
    "headerContainerSectionDesktop",
    "header",
    "surface",
    "image1",
    "links",
    "rectangle8",
    "cover",
    "surface2",
    "block",
    "list",
    "content",
    "content2",
    "picture",
    "pic",
    "fixedAspectRatioCoverElementsOnTop",
    "topElements",
    "centerElements",
    "bottomElements",
    "aspectRatio",
    "aspectRatioKeeperAdditionally45RotatedAutoLayout",
    "aspectRatioKeeperRotatedAutoLayout"
  ],
  header: ["header", "surface", "image1", "links", "rectangle8"],
  surface: ["surface", "image1", "links"],
  image1: ["image1"],
  links: ["links"],
  rectangle8: ["rectangle8"],
  cover: [
    "cover",
    "surface2",
    "block",
    "list",
    "content",
    "content2",
    "picture"
  ],
  surface2: ["surface2", "block", "list", "content", "content2", "picture"],
  block: ["block", "list", "content", "content2", "picture"],
  list: ["list", "content", "content2", "picture"],
  content: ["content", "content2"],
  content2: ["content2"],
  picture: ["picture"],
  pic: [
    "pic",
    "fixedAspectRatioCoverElementsOnTop",
    "topElements",
    "centerElements",
    "bottomElements",
    "aspectRatio",
    "aspectRatioKeeperAdditionally45RotatedAutoLayout",
    "aspectRatioKeeperRotatedAutoLayout"
  ],
  fixedAspectRatioCoverElementsOnTop: [
    "fixedAspectRatioCoverElementsOnTop",
    "topElements",
    "centerElements",
    "bottomElements",
    "aspectRatio",
    "aspectRatioKeeperAdditionally45RotatedAutoLayout",
    "aspectRatioKeeperRotatedAutoLayout"
  ],
  topElements: ["topElements"],
  centerElements: ["centerElements"],
  bottomElements: ["bottomElements"],
  aspectRatio: [
    "aspectRatio",
    "aspectRatioKeeperAdditionally45RotatedAutoLayout",
    "aspectRatioKeeperRotatedAutoLayout"
  ],
  aspectRatioKeeperAdditionally45RotatedAutoLayout: [
    "aspectRatioKeeperAdditionally45RotatedAutoLayout",
    "aspectRatioKeeperRotatedAutoLayout"
  ],
  aspectRatioKeeperRotatedAutoLayout: ["aspectRatioKeeperRotatedAutoLayout"],
  aboutTikTokSection: ["aboutTikTokSection", "surface3", "title"],
  surface3: ["surface3", "title"],
  title: ["title"],
  featureListSection5: [
    "featureListSection5",
    "frame99",
    "title2",
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  frame99: [
    "frame99",
    "title2",
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  title2: ["title2"],
  featureListSection6: [
    "featureListSection6",
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2",
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  frame97: [
    "frame97",
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line",
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms",
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
  ],
  blockFeatureListSection5: [
    "blockFeatureListSection5",
    "icon",
    "block2",
    "titleLine",
    "line"
  ],
  icon: ["icon"],
  block2: ["block2", "titleLine", "line"],
  titleLine: ["titleLine", "line"],
  line: ["line"],
  blockFeatureListSection52: [
    "blockFeatureListSection52",
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
  ],
  block3: [
    "block3",
    "titleLine2",
    "line2",
    "concepts",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
  ],
  titleLine2: ["titleLine2", "line2", "concepts"],
  line2: ["line2"],
  concepts: ["concepts"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
    ],
  blockFeatureListSection53: [
    "blockFeatureListSection53",
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
  ],
  block4: [
    "block4",
    "titleLine3",
    "line3",
    "concepts2",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
  ],
  titleLine3: ["titleLine3", "line3", "concepts2"],
  line3: ["line3"],
  concepts2: ["concepts2"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
    ],
  frame98: [
    "frame98",
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3",
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  blockFeatureListSection54: [
    "blockFeatureListSection54",
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
  ],
  block5: [
    "block5",
    "titleLine4",
    "line4",
    "concepts3",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
  ],
  titleLine4: ["titleLine4", "line4", "concepts3"],
  line4: ["line4"],
  concepts3: ["concepts3"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
    ],
  blockFeatureListSection55: [
    "blockFeatureListSection55",
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  block6: [
    "block6",
    "titleLine5",
    "line5",
    "concepts4",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
  ],
  titleLine5: ["titleLine5", "line5", "concepts4"],
  line5: ["line5"],
  concepts4: ["concepts4"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
    ],
  featureListSection3: [
    "featureListSection3",
    "frame100",
    "title3",
    "blocks",
    "blockFeatureListSection3",
    "blockDefault",
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5",
    "blockFeatureListSection32",
    "blockDefault2",
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6",
    "blockFeatureListSection33",
    "blockDefault3",
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
  ],
  frame100: [
    "frame100",
    "title3",
    "blocks",
    "blockFeatureListSection3",
    "blockDefault",
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5",
    "blockFeatureListSection32",
    "blockDefault2",
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6",
    "blockFeatureListSection33",
    "blockDefault3",
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
  ],
  title3: ["title3"],
  blocks: [
    "blocks",
    "blockFeatureListSection3",
    "blockDefault",
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5",
    "blockFeatureListSection32",
    "blockDefault2",
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6",
    "blockFeatureListSection33",
    "blockDefault3",
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
  ],
  blockFeatureListSection3: [
    "blockFeatureListSection3",
    "blockDefault",
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5"
  ],
  blockDefault: [
    "blockDefault",
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5"
  ],
  block7: [
    "block7",
    "title4",
    "line6",
    "concepts5",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5"
  ],
  title4: ["title4", "line6", "concepts5"],
  line6: ["line6"],
  concepts5: ["concepts5"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5"
    ],
  blockFeatureListSection32: [
    "blockFeatureListSection32",
    "blockDefault2",
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6"
  ],
  blockDefault2: [
    "blockDefault2",
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6"
  ],
  block8: [
    "block8",
    "title5",
    "line7",
    "concepts6",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6"
  ],
  title5: ["title5", "line7", "concepts6"],
  line7: ["line7"],
  concepts6: ["concepts6"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6"
    ],
  blockFeatureListSection33: [
    "blockFeatureListSection33",
    "blockDefault3",
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
  ],
  blockDefault3: [
    "blockDefault3",
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
  ],
  block9: [
    "block9",
    "title6",
    "line8",
    "concepts7",
    "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
  ],
  title6: ["title6", "line8", "concepts7"],
  line8: ["line8"],
  concepts7: ["concepts7"],
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7:
    [
      "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
    ],
  contactsSection: [
    "contactsSection",
    "surface4",
    "blockInfo",
    "blockInfo2",
    "block10",
    "rectangle138",
    "осталисьВопросы",
    "block11",
    "нашиКонтакты",
    "text2",
    "rectangle137",
    "form",
    "form2",
    "оставьтеЗаявку",
    "frame77",
    "block12",
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134",
    "button",
    "rectangle135",
    "отравитьЗаявку"
  ],
  surface4: [
    "surface4",
    "blockInfo",
    "blockInfo2",
    "block10",
    "rectangle138",
    "осталисьВопросы",
    "block11",
    "нашиКонтакты",
    "text2",
    "rectangle137",
    "form",
    "form2",
    "оставьтеЗаявку",
    "frame77",
    "block12",
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134",
    "button",
    "rectangle135",
    "отравитьЗаявку"
  ],
  blockInfo: [
    "blockInfo",
    "blockInfo2",
    "block10",
    "rectangle138",
    "осталисьВопросы",
    "block11",
    "нашиКонтакты",
    "text2",
    "rectangle137"
  ],
  blockInfo2: [
    "blockInfo2",
    "block10",
    "rectangle138",
    "осталисьВопросы",
    "block11",
    "нашиКонтакты",
    "text2",
    "rectangle137"
  ],
  block10: ["block10", "rectangle138", "осталисьВопросы"],
  rectangle138: ["rectangle138"],
  осталисьВопросы: ["осталисьВопросы"],
  block11: ["block11", "нашиКонтакты", "text2", "rectangle137"],
  нашиКонтакты: ["нашиКонтакты"],
  text2: ["text2"],
  rectangle137: ["rectangle137"],
  form: [
    "form",
    "form2",
    "оставьтеЗаявку",
    "frame77",
    "block12",
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134",
    "button",
    "rectangle135",
    "отравитьЗаявку"
  ],
  form2: ["form2", "оставьтеЗаявку"],
  оставьтеЗаявку: ["оставьтеЗаявку"],
  frame77: [
    "frame77",
    "block12",
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134",
    "button",
    "rectangle135",
    "отравитьЗаявку"
  ],
  block12: [
    "block12",
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134",
    "button",
    "rectangle135",
    "отравитьЗаявку"
  ],
  input: [
    "input",
    "мыВамПерезвоним",
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134"
  ],
  мыВамПерезвоним: ["мыВамПерезвоним"],
  list2: [
    "list2",
    "name",
    "rectangle132",
    "имя",
    "phoneNumber",
    "rectangle133",
    "номерТелефона",
    "phoneNumber2",
    "rectangle134"
  ],
  name: ["name", "rectangle132", "имя"],
  rectangle132: ["rectangle132"],
  имя: ["имя"],
  phoneNumber: ["phoneNumber", "rectangle133", "номерТелефона"],
  rectangle133: ["rectangle133"],
  номерТелефона: ["номерТелефона"],
  phoneNumber2: ["phoneNumber2", "rectangle134"],
  rectangle134: ["rectangle134"],
  button: ["button", "rectangle135", "отравитьЗаявку"],
  rectangle135: ["rectangle135"],
  отравитьЗаявку: ["отравитьЗаявку"],
  footerSection: ["footerSection", "surface5", "copyright", "frame95", "link"],
  surface5: ["surface5", "copyright", "frame95", "link"],
  copyright: ["copyright"],
  frame95: ["frame95", "link"],
  link: ["link"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  mainPageDesktop: "div";
  headerContainerSectionDesktop: "div";
  header: "div";
  surface: "div";
  image1: "div";
  links: "div";
  rectangle8: "div";
  cover: "div";
  surface2: "div";
  block: "div";
  list: "div";
  content: "div";
  content2: "div";
  picture: "div";
  pic: "div";
  fixedAspectRatioCoverElementsOnTop: "div";
  topElements: "div";
  centerElements: "div";
  bottomElements: "div";
  aspectRatio: "div";
  aspectRatioKeeperAdditionally45RotatedAutoLayout: "div";
  aspectRatioKeeperRotatedAutoLayout: "div";
  aboutTikTokSection: "div";
  surface3: "div";
  title: "div";
  featureListSection5: "div";
  frame99: "div";
  title2: "div";
  featureListSection6: "div";
  frame97: "div";
  blockFeatureListSection5: "div";
  icon: "div";
  block2: "div";
  titleLine: "div";
  line: "div";
  blockFeatureListSection52: "div";
  block3: "div";
  titleLine2: "div";
  line2: "div";
  concepts: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms: "div";
  blockFeatureListSection53: "div";
  block4: "div";
  titleLine3: "div";
  line3: "div";
  concepts2: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2: "div";
  frame98: "div";
  blockFeatureListSection54: "div";
  block5: "div";
  titleLine4: "div";
  line4: "div";
  concepts3: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3: "div";
  blockFeatureListSection55: "div";
  block6: "div";
  titleLine5: "div";
  line5: "div";
  concepts4: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4: "div";
  featureListSection3: "div";
  frame100: "div";
  title3: "div";
  blocks: "div";
  blockFeatureListSection3: "div";
  blockDefault: "div";
  block7: "div";
  title4: "div";
  line6: "div";
  concepts5: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5: "div";
  blockFeatureListSection32: "div";
  blockDefault2: "div";
  block8: "div";
  title5: "div";
  line7: "div";
  concepts6: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6: "div";
  blockFeatureListSection33: "div";
  blockDefault3: "div";
  block9: "div";
  title6: "div";
  line8: "div";
  concepts7: "div";
  weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7: "div";
  contactsSection: "div";
  surface4: "div";
  blockInfo: "div";
  blockInfo2: "div";
  block10: "div";
  rectangle138: "div";
  осталисьВопросы: "div";
  block11: "div";
  нашиКонтакты: "div";
  text2: "div";
  rectangle137: "div";
  form: "div";
  form2: "div";
  оставьтеЗаявку: "div";
  frame77: "div";
  block12: "div";
  input: "div";
  мыВамПерезвоним: "div";
  list2: "div";
  name: "div";
  rectangle132: "div";
  имя: "div";
  phoneNumber: "div";
  rectangle133: "div";
  номерТелефона: "div";
  phoneNumber2: "div";
  rectangle134: "div";
  button: "div";
  rectangle135: "div";
  отравитьЗаявку: "div";
  footerSection: "div";
  surface5: "div";
  copyright: "div";
  frame95: "div";
  link: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    mainPageDesktop: makeNodeComponent("mainPageDesktop"),
    headerContainerSectionDesktop: makeNodeComponent(
      "headerContainerSectionDesktop"
    ),
    header: makeNodeComponent("header"),
    surface: makeNodeComponent("surface"),
    image1: makeNodeComponent("image1"),
    links: makeNodeComponent("links"),
    rectangle8: makeNodeComponent("rectangle8"),
    cover: makeNodeComponent("cover"),
    surface2: makeNodeComponent("surface2"),
    block: makeNodeComponent("block"),
    list: makeNodeComponent("list"),
    content: makeNodeComponent("content"),
    content2: makeNodeComponent("content2"),
    picture: makeNodeComponent("picture"),
    pic: makeNodeComponent("pic"),
    fixedAspectRatioCoverElementsOnTop: makeNodeComponent(
      "fixedAspectRatioCoverElementsOnTop"
    ),
    topElements: makeNodeComponent("topElements"),
    centerElements: makeNodeComponent("centerElements"),
    bottomElements: makeNodeComponent("bottomElements"),
    aspectRatio: makeNodeComponent("aspectRatio"),
    aspectRatioKeeperAdditionally45RotatedAutoLayout: makeNodeComponent(
      "aspectRatioKeeperAdditionally45RotatedAutoLayout"
    ),
    aspectRatioKeeperRotatedAutoLayout: makeNodeComponent(
      "aspectRatioKeeperRotatedAutoLayout"
    ),
    aboutTikTokSection: makeNodeComponent("aboutTikTokSection"),
    surface3: makeNodeComponent("surface3"),
    title: makeNodeComponent("title"),
    featureListSection5: makeNodeComponent("featureListSection5"),
    frame99: makeNodeComponent("frame99"),
    title2: makeNodeComponent("title2"),
    featureListSection6: makeNodeComponent("featureListSection6"),
    frame97: makeNodeComponent("frame97"),
    blockFeatureListSection5: makeNodeComponent("blockFeatureListSection5"),
    icon: makeNodeComponent("icon"),
    block2: makeNodeComponent("block2"),
    titleLine: makeNodeComponent("titleLine"),
    line: makeNodeComponent("line"),
    blockFeatureListSection52: makeNodeComponent("blockFeatureListSection52"),
    block3: makeNodeComponent("block3"),
    titleLine2: makeNodeComponent("titleLine2"),
    line2: makeNodeComponent("line2"),
    concepts: makeNodeComponent("concepts"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms"
      ),
    blockFeatureListSection53: makeNodeComponent("blockFeatureListSection53"),
    block4: makeNodeComponent("block4"),
    titleLine3: makeNodeComponent("titleLine3"),
    line3: makeNodeComponent("line3"),
    concepts2: makeNodeComponent("concepts2"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms2"
      ),
    frame98: makeNodeComponent("frame98"),
    blockFeatureListSection54: makeNodeComponent("blockFeatureListSection54"),
    block5: makeNodeComponent("block5"),
    titleLine4: makeNodeComponent("titleLine4"),
    line4: makeNodeComponent("line4"),
    concepts3: makeNodeComponent("concepts3"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms3"
      ),
    blockFeatureListSection55: makeNodeComponent("blockFeatureListSection55"),
    block6: makeNodeComponent("block6"),
    titleLine5: makeNodeComponent("titleLine5"),
    line5: makeNodeComponent("line5"),
    concepts4: makeNodeComponent("concepts4"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms4"
      ),
    featureListSection3: makeNodeComponent("featureListSection3"),
    frame100: makeNodeComponent("frame100"),
    title3: makeNodeComponent("title3"),
    blocks: makeNodeComponent("blocks"),
    blockFeatureListSection3: makeNodeComponent("blockFeatureListSection3"),
    blockDefault: makeNodeComponent("blockDefault"),
    block7: makeNodeComponent("block7"),
    title4: makeNodeComponent("title4"),
    line6: makeNodeComponent("line6"),
    concepts5: makeNodeComponent("concepts5"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms5"
      ),
    blockFeatureListSection32: makeNodeComponent("blockFeatureListSection32"),
    blockDefault2: makeNodeComponent("blockDefault2"),
    block8: makeNodeComponent("block8"),
    title5: makeNodeComponent("title5"),
    line7: makeNodeComponent("line7"),
    concepts6: makeNodeComponent("concepts6"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms6"
      ),
    blockFeatureListSection33: makeNodeComponent("blockFeatureListSection33"),
    blockDefault3: makeNodeComponent("blockDefault3"),
    block9: makeNodeComponent("block9"),
    title6: makeNodeComponent("title6"),
    line8: makeNodeComponent("line8"),
    concepts7: makeNodeComponent("concepts7"),
    weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7:
      makeNodeComponent(
        "weWorkOnAUniqueDetailedStrategyAndConceptOfGrowthAndRecognitionOnThePlatformApplyingCurrentTrendsAndAlgorithms7"
      ),
    contactsSection: makeNodeComponent("contactsSection"),
    surface4: makeNodeComponent("surface4"),
    blockInfo: makeNodeComponent("blockInfo"),
    blockInfo2: makeNodeComponent("blockInfo2"),
    block10: makeNodeComponent("block10"),
    rectangle138: makeNodeComponent("rectangle138"),
    осталисьВопросы: makeNodeComponent("осталисьВопросы"),
    block11: makeNodeComponent("block11"),
    нашиКонтакты: makeNodeComponent("нашиКонтакты"),
    text2: makeNodeComponent("text2"),
    rectangle137: makeNodeComponent("rectangle137"),
    form: makeNodeComponent("form"),
    form2: makeNodeComponent("form2"),
    оставьтеЗаявку: makeNodeComponent("оставьтеЗаявку"),
    frame77: makeNodeComponent("frame77"),
    block12: makeNodeComponent("block12"),
    input: makeNodeComponent("input"),
    мыВамПерезвоним: makeNodeComponent("мыВамПерезвоним"),
    list2: makeNodeComponent("list2"),
    _name: makeNodeComponent("name"),
    rectangle132: makeNodeComponent("rectangle132"),
    имя: makeNodeComponent("имя"),
    phoneNumber: makeNodeComponent("phoneNumber"),
    rectangle133: makeNodeComponent("rectangle133"),
    номерТелефона: makeNodeComponent("номерТелефона"),
    phoneNumber2: makeNodeComponent("phoneNumber2"),
    rectangle134: makeNodeComponent("rectangle134"),
    button: makeNodeComponent("button"),
    rectangle135: makeNodeComponent("rectangle135"),
    отравитьЗаявку: makeNodeComponent("отравитьЗаявку"),
    footerSection: makeNodeComponent("footerSection"),
    surface5: makeNodeComponent("surface5"),
    copyright: makeNodeComponent("copyright"),
    frame95: makeNodeComponent("frame95"),
    link: makeNodeComponent("link"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
